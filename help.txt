Usage: run [COMMAND ...]

Run OpenStreetMap Tile Server related operations 
(featuring a colored relief, hillshade and contour lines) 
in a docker container.

Positional arguments:
  COMMAND          The command to run. (default: help)

High Level Commands:
  fromScratch Starting from a directory mapped to /var/www that contains 
              * openstreetmap (*.osm) data and
              * digital elevation model (*.hgt) data, 
              this command does everything required in order to serve tiles from this data.
              I.e., it executes the following low level commands in the given order:
              (1) drop_dem, 
              (2) init_db, 
              (3) start_db, 
              (4) create_user, 
              (5) create_db, 
              (6) import, 
              (7) clear_cache, 
              (8) start_services
  import      Imports all *.osm into the database and 
              calculates contours, relief and hillshade from *.hgt files.
              The contour lines are saved in the postgres database.
              The relief and hillshade raster images are saved in /var/www/mapnik-style
              The imported files are copied into a folder named "imported".

				   
Low Level Commands:
  help              Show this help message
  init_db           Initialise the postgres database
  start_db          Start the postgresql database
  create_user       Create the osm user in the database
  create_db         Create the osm database
  import_osm        Import *.osm files from /var/www into the database
  import_dem        import_contours, import_relief
  import_contours   Calculates contour lines from *hgt files in /var/www, saves them in the database
  import_relief     Calculates relief and hillshade from *hgt files in /var/www, 
                    saves them in /var/www/mapnik-style
  import_style		Ensure that shapefiles are present and translate project.yaml to osm.xml
  reimport_contours drop_contours, import_contours from /var/www/imported
  reimport_relief   drop_relief, import_relief from /var/www/imported
  start_services    Start the osm web services (renderd and apache2)
  stop_services     Stop the osm web services (renderd and apache2)
  restart_services  stop_services, start_services
  cli               Drop into a bash shell
  drop_db           Drop the osm database (currently including contour lines)
  drop_relief       Drops the relief (including hillshade)
  drop_contours     Drops the contours table from the postgres db
  drop_dem          drop_relief, drop_contours
  clear_cache       Clears the mod_tile cache and restarts the rendering daemon
  

Recommended approach is to map a directory containing the files to import to /var/www. 
This folder is used to save
  * the postgres db
  * the tile cache
  * the mapnik styles
Thus, all project-specific data is contained in one folder.

The following command will emerge a tile server (including a leaflet test page)
under http://localhost:4242

sudo docker run -d -p 4242:80 -v /my_dir_containing_data_files:/var/www rednil/mapnik fromscratch
        
Afterwards, the container can be restarted with existing data using

sudo docker run -d -p 4242:80 -v /my_dir_containing_data_files:/var/www rednil/mapnik startservices

For debugging purposes, start the container with 

sudo docker run -t -i -p 4242:80 -v /my_dir_containing_data_files:/var/www rednil/mapnik and execute single commands like "run init_db"
